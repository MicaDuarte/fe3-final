{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUDA-Delfi\\\\OneDrive\\\\Escritorio\\\\frontEnd 3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from 'react';\n\n// Inicializar el estado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  dentists: [],\n  theme: 'light',\n  // Puedes usar 'dark' o 'light' según prefieras\n  loading: true,\n  error: null\n};\n\n// Acciones del reducer\nconst ACTIONS = {\n  SET_DENTISTS: 'SET_DENTISTS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  TOGGLE_THEME: 'TOGGLE_THEME'\n};\n\n// Reducer\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DENTISTS:\n      return {\n        ...state,\n        dentists: action.payload,\n        loading: false\n      };\n    case ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case ACTIONS.TOGGLE_THEME:\n      return {\n        ...state,\n        theme: state.theme === 'light' ? 'dark' : 'light'\n      };\n    default:\n      return state;\n  }\n};\n\n// Crear el contexto\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\n// Proveedor del contexto\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const fetchDentists = async () => {\n      dispatch({\n        type: ACTIONS.SET_LOADING\n      });\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        if (!response.ok) throw new Error('Error fetching data');\n        const data = await response.json();\n        dispatch({\n          type: ACTIONS.SET_DENTISTS,\n          payload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: ACTIONS.SET_ERROR,\n          payload: error.message\n        });\n      }\n    };\n    fetchDentists();\n  }, []);\n  const toggleTheme = () => {\n    dispatch({\n      type: ACTIONS.TOGGLE_THEME\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      state,\n      dispatch,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","dentists","theme","loading","error","ACTIONS","SET_DENTISTS","SET_LOADING","SET_ERROR","TOGGLE_THEME","reducer","state","action","type","payload","ContextGlobal","ContextProvider","children","_s","dispatch","fetchDentists","response","fetch","ok","Error","data","json","message","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SUDA-Delfi/OneDrive/Escritorio/frontEnd 3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\n\n// Inicializar el estado\nconst initialState = {\n  dentists: [],\n  theme: 'light', // Puedes usar 'dark' o 'light' según prefieras\n  loading: true,\n  error: null,\n};\n\n// Acciones del reducer\nconst ACTIONS = {\n  SET_DENTISTS: 'SET_DENTISTS',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  TOGGLE_THEME: 'TOGGLE_THEME',\n};\n\n// Reducer\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_DENTISTS:\n      return { ...state, dentists: action.payload, loading: false };\n    case ACTIONS.SET_LOADING:\n      return { ...state, loading: true };\n    case ACTIONS.SET_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    case ACTIONS.TOGGLE_THEME:\n      return { ...state, theme: state.theme === 'light' ? 'dark' : 'light' };\n    default:\n      return state;\n  }\n};\n\n// Crear el contexto\nexport const ContextGlobal = createContext();\n\n// Proveedor del contexto\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const fetchDentists = async () => {\n      dispatch({ type: ACTIONS.SET_LOADING });\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        if (!response.ok) throw new Error('Error fetching data');\n        const data = await response.json();\n        dispatch({ type: ACTIONS.SET_DENTISTS, payload: data });\n      } catch (error) {\n        dispatch({ type: ACTIONS.SET_ERROR, payload: error.message });\n      }\n    };\n\n    fetchDentists();\n  }, []);\n\n  const toggleTheme = () => {\n    dispatch({ type: ACTIONS.TOGGLE_THEME });\n  };\n\n  return (\n    <ContextGlobal.Provider value={{ state, dispatch, toggleTheme }}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}