{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUDA-Delfi\\\\OneDrive\\\\Escritorio\\\\frontEnd 3\\\\fe3-final\\\\src\\\\Routes\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ContextGlobal } from '../Components/utils/global.context.jsx'; // Asegúrate de usar la ruta correcta\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID de la URL\n  const {\n    dentists,\n    loading\n  } = useContext(ContextGlobal); // Obtiene los datos desde el contexto\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Buscar el dentista por su ID\n  const dentist = dentists.find(dentist => dentist.id === parseInt(id));\n  if (!dentist) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dentist not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: dentist.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this), \" \", dentist.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this), \" \", dentist.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this), \" \", dentist.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Website:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), \" \", dentist.website]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), \" \", dentist.company.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), \" \", `${dentist.address.street}, ${dentist.address.city}, ${dentist.address.zipcode}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"GWQeZKD7nk+cipIoTgAu6r8XcyU=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useContext","useParams","ContextGlobal","jsxDEV","_jsxDEV","Detail","_s","id","dentists","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","dentist","find","parseInt","className","name","username","email","phone","website","company","address","street","city","zipcode","_c","$RefreshReg$"],"sources":["C:/Users/SUDA-Delfi/OneDrive/Escritorio/frontEnd 3/fe3-final/src/Routes/Detail.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ContextGlobal } from '../Components/utils/global.context.jsx'; // Asegúrate de usar la ruta correcta\n\nconst Detail = () => {\n  const { id } = useParams(); // Obtiene el ID de la URL\n  const { dentists, loading } = useContext(ContextGlobal); // Obtiene los datos desde el contexto\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  // Buscar el dentista por su ID\n  const dentist = dentists.find(dentist => dentist.id === parseInt(id));\n\n  if (!dentist) {\n    return <p>Dentist not found</p>;\n  }\n\n  return (\n    <div className=\"detail-container\">\n      <h2>{dentist.name}</h2>\n      <p><strong>Username:</strong> {dentist.username}</p>\n      <p><strong>Email:</strong> {dentist.email}</p>\n      <p><strong>Phone:</strong> {dentist.phone}</p>\n      <p><strong>Website:</strong> {dentist.website}</p>\n      <p><strong>Company:</strong> {dentist.company.name}</p>\n      <p><strong>Address:</strong> {`${dentist.address.street}, ${dentist.address.city}, ${dentist.address.zipcode}`}</p>\n    </div>\n  );\n};\n\nexport default Detail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}